{"ast":null,"code":"var _jsxFileName = \"/home/sparlor/Projects/scalehaus/uix/src/App.js\";\nimport React from 'react';\nimport Navbar from './components/Navigation/Navbar';\nimport Aux from './hoc/Aux';\nimport Routes from './components/Routes/Routes';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/auth';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      navButton: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    const childProps = {\n      isAuth: this.props.isAuthenticated,\n      loggedIn: this.props.isAuthenticated\n    };\n\n    const openNav = () => {\n      if (this.state.navButton === true) {\n        document.getElementById(\"mySidenav\").style.width = \"100%\";\n        document.querySelector(\".container\").classList.add(\"change\");\n        this.setState({\n          navButton: false\n        });\n      } else {\n        document.getElementById(\"mySidenav\").style.width = \"0\";\n        document.querySelector(\".container\").classList.remove(\"change\");\n        this.setState({\n          navButton: true\n        });\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(Aux, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Navbar, {\n      openNav: openNav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/sparlor/Projects/scalehaus/uix/src/App.js"],"names":["React","Navbar","Aux","Routes","connect","actions","App","Component","state","navButton","componentDidMount","props","onTryAutoSignup","render","childProps","isAuth","isAuthenticated","loggedIn","openNav","document","getElementById","style","width","querySelector","classList","add","setState","remove"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;;AAIA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAMhCC,KANgC,GAMxB;AACNC,MAAAA,SAAS,EAAE;AADL,KANwB;AAAA;;AAElCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,eAAX;AACD;;AAKCC,EAAAA,MAAM,GAAG;AAET,UAAMC,UAAU,GAAG;AACjBC,MAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,eADF;AAEjBC,MAAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWK;AAFJ,KAAnB;;AAKA,UAAME,OAAO,GAAG,MAAM;AAEpB,UAAG,KAAKV,KAAL,CAAWC,SAAX,KAAyB,IAA5B,EAAiC;AACjCU,QAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,KAA3C,GAAmD,MAAnD;AACAH,QAAAA,QAAQ,CAACI,aAAT,CAAuB,YAAvB,EAAqCC,SAArC,CAA+CC,GAA/C,CAAmD,QAAnD;AAEA,aAAKC,QAAL,CAAc;AACZjB,UAAAA,SAAS,EAAC;AADE,SAAd;AAGC,OAPD,MAOO;AACPU,QAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,KAA3C,GAAmD,GAAnD;AACAH,QAAAA,QAAQ,CAACI,aAAT,CAAuB,YAAvB,EAAqCC,SAArC,CAA+CG,MAA/C,CAAsD,QAAtD;AAEA,aAAKD,QAAL,CAAc;AACZjB,UAAAA,SAAS,EAAC;AADE,SAAd;AAGD;AACF,KAjBC;;AAkBA,wBACE,oBAAC,GAAD,oBAAS,KAAKE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACI,oBAAC,MAAD;AACA,MAAA,OAAO,EAAIO,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF;AAOC;;AAzC+B","sourcesContent":["import React from 'react';\nimport Navbar from './components/Navigation/Navbar';\nimport Aux from './hoc/Aux';\nimport Routes from './components/Routes/Routes';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/auth';\n\n\n\nclass App extends React.Component {\n\ncomponentDidMount() {\n  this.props.onTryAutoSignup();\n}  \n\n  state = {\n    navButton: true,\n  }\n  render() {\n\n  const childProps = {\n    isAuth: this.props.isAuthenticated,\n    loggedIn: this.props.isAuthenticated,\n  };\n\n  const openNav = () => {\n\n    if(this.state.navButton === true){\n    document.getElementById(\"mySidenav\").style.width = \"100%\";\n    document.querySelector(\".container\").classList.add(\"change\");\n\n    this.setState({\n      navButton:false\n    })\n    } else {\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n    document.querySelector(\".container\").classList.remove(\"change\");\n\n    this.setState({\n      navButton:true\n    })\n  }\n}\n  return (\n    <Aux {...this.props}>\n        <Navbar\n        openNav = {openNav}\n        />\n    </Aux>\n  );\n  }\n}"]},"metadata":{},"sourceType":"module"}