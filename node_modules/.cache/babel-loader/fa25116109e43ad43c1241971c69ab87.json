{"ast":null,"code":"var _jsxFileName = \"/home/sparlor/Projects/scalehaus/uix/src/components/Forms/Form.js\";\nimport React from 'react';\nimport { useForm, ErrorMessage } from 'react-hook-form';\nimport './Form.scss';\nexport default function App() {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(errors);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"Title\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Mr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, \"Mr\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Mrs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, \"Mrs\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Miss\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \"Miss\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Dr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Dr\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"First name\",\n    name: \"First name\",\n    ref: register({\n      required: true,\n      maxLength: 80\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"First name\",\n    message: \"This field is required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Last name\",\n    name: \"Last name\",\n    ref: register({\n      required: true,\n      maxLength: 100\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"Last name\",\n    message: \"This field is required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"Email\",\n    ref: register({\n      required: 'This field is required',\n      pattern: {\n        value: /^\\S+@\\S+$/i,\n        message: \"Please enter a valid email address\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"Email\",\n    render: ({\n      messages\n    }) => messages && Object.entries(messages).map(([type, message]) => /*#__PURE__*/React.createElement(\"p\", {\n      key: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, message)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  }), \"  \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"tel\",\n    placeholder: \"Mobile number\",\n    name: \"Mobile number\",\n    ref: register({\n      required: true,\n      minLength: 6,\n      maxLength: 12\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Company\",\n    name: \"Company\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/home/sparlor/Projects/scalehaus/uix/src/components/Forms/Form.js"],"names":["React","useForm","ErrorMessage","App","register","handleSubmit","errors","onSubmit","data","console","log","required","maxLength","pattern","value","message","messages","Object","entries","map","type","minLength"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm, ErrorMessage } from 'react-hook-form';\nimport './Form.scss'\n\nexport default function App() {\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = data => console.log(data);\n  console.log(errors);\n  \n  return (\n    <div className = \"form-component\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <select name=\"Title\" ref={register({ required: true })}>\n                <option value=\"Mr\">Mr</option>\n                <option value=\"Mrs\">Mrs</option>\n                <option value=\"Miss\">Miss</option>\n                <option value=\"Dr\">Dr</option>\n            </select>\n            <input type=\"text\" placeholder=\"First name\" name=\"First name\" ref={register({required: true, maxLength: 80})} />\n            <span><ErrorMessage errors={errors} name=\"First name\" message=\"This field is required\" /></span>\n\n            <input type=\"text\" placeholder=\"Last name\" name=\"Last name\" ref={register({required: true, maxLength: 100})} />\n            <span><ErrorMessage errors={errors} name=\"Last name\" message=\"This field is required\" /></span>\n            \n            <input type=\"text\" placeholder=\"Email\" name=\"Email\" ref={register({required: 'This field is required', pattern: { \n              value: /^\\S+@\\S+$/i,\n              message: \"Please enter a valid email address\"}\n            })} />\n            <span><ErrorMessage\n              errors={errors}\n              name=\"Email\"\n              render={({ messages }) =>\n                messages &&\n                Object.entries(messages).map(([type, message]) => (\n                  <p key={type}>{message}</p>\n                ))\n              }\n            />  </span>\n            <input type=\"tel\" placeholder=\"Mobile number\" name=\"Mobile number\" ref={register({required: true, minLength: 6, maxLength: 12})} />\n\n            <input type=\"text\" placeholder=\"Company\" name=\"Company\" ref={register} />\n\n            <input type=\"submit\" />\n        </form>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}